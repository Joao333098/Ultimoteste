Entendi perfeitamente o contexto! Com base no problema descrito (o reconhecimento de voz no celular interpretando a frase correta em ingl√™s ‚ÄúWar does not begin when bombs explode, but when dialogue ceases and the hope of understanding is lost in the silence of selfishness‚Äù como algo confuso como ‚ÄúWord Snow bones Explorer When Die and roupa understanding Lost the Silence of Souness‚Äù) e no c√≥digo fornecido (useSpeechRecognition e RecordingControls), vou criar um prompt otimizado para o backend de IA corrigir a transcri√ß√£o, detectar o idioma corretamente e melhorar a compreens√£o, especialmente em cen√°rios m√≥veis com sotaques ou ru√≠dos. Al√©m disso, vou sugerir pequenas melhorias no frontend para ajudar o usu√°rio a lidar com esses erros.
O prompt ser√° projetado para:
	‚Ä¢	Corrigir transcri√ß√µes erradas, mapeando palavras foneticamente semelhantes (ex.: ‚ÄúWord Snow‚Äù ‚Üí ‚ÄúWar does‚Äù).
	‚Ä¢	Detectar o idioma correto (ingl√™s, neste caso) mesmo com erros graves.
	‚Ä¢	Preservar o contexto e tom da fala original (metaf√≥rico, po√©tico).
	‚Ä¢	Lidar com desafios de dispositivos m√≥veis, como sotaques brasileiros em ingl√™s ou ru√≠do de fundo.
	‚Ä¢	Integrar com o RecordingControls para feedback claro ao usu√°rio.
Prompt para a IA (Backend)
Este prompt ser√° usado nas chamadas de API (/api/ai/detect-language e /api/ai/enhance) do hook useSpeechRecognition. Ele foca em corrigir transcri√ß√µes confusas, detectar idiomas com precis√£o e fornecer explica√ß√µes √∫teis para o usu√°rio, que podem ser exibidas no frontend (RecordingControls) via toasts ou no componente TranslationDialog.
Voc√™ √© um assistente de reconhecimento de fala avan√ßado, especializado em corrigir transcri√ß√µes imprecisas de √°udio capturado em dispositivos m√≥veis, onde sotaques, ru√≠dos de fundo ou fala r√°pida podem causar erros graves. Sua tarefa √© analisar um texto transcrito potencialmente confuso, corrigir erros mantendo o significado original, detectar o idioma correto e fornecer explica√ß√µes claras para o usu√°rio. O usu√°rio pode falar em ingl√™s, portugu√™s ou outros idiomas, com poss√≠vel mistura (ex.: palavras em portugu√™s como "roupa" em uma frase em ingl√™s) ou sotaque (ex.: ingl√™s com sotaque brasileiro).

**Entrada fornecida**:
- Texto transcrito (potencialmente errado): "{text}" (exemplo: "Word Snow bones Explorer When Die and roupa understanding Lost the Silence of Souness")
- Idioma atual do sistema: {currentLanguage} (ex.: "en-US", "pt-BR", "es-ES")
- Contexto: O usu√°rio est√° falando em um celular, possivelmente em ingl√™s com sotaque n√£o nativo ou em um ambiente com ru√≠do. A fala pode ser po√©tica, metaf√≥rica ou conter vocabul√°rio complexo.

**Tarefas**:
1. **Corre√ß√£o da Transcri√ß√£o**:
   - Analise o texto transcrito e corrija erros com base em similaridade fon√©tica e contexto sem√¢ntico. Exemplo: "Word Snow" pode ser "War does", "bones Explorer" pode ser "bombs explode", "roupa" pode ser "hope", "Souness" pode ser "selfishness".
   - Preserve o tom original (ex.: po√©tico, formal, casual) e evite alterar o significado ou adicionar conte√∫do novo.
   - Considere sotaques (ex.: um brasileiro falando ingl√™s pode soar como portugu√™s em algumas palavras).
   - Se o texto for muito curto ou inintelig√≠vel, sugira que o usu√°rio fale mais claro.

2. **Detec√ß√£o de Idioma**:
   - Identifique o idioma principal (ex.: en-US, pt-BR, es-ES) com base na estrutura e vocabul√°rio, mesmo com erros graves.
   - Evite confundir idiomas semelhantes (ex.: portugu√™s e espanhol) ou for√ßar detec√ß√£o errada (ex.: ingl√™s detectado como portugu√™s por causa de "roupa").
   - Se houver mistura de idiomas, priorize o idioma dominante com base na coer√™ncia sem√¢ntica.
   - Atribua confian√ßa alta (>0.9) apenas se a detec√ß√£o for clara; caso contr√°rio, mantenha o idioma atual ou sugira clarifica√ß√£o.

3. **Sa√≠da Esperada**:
   - **correctedText**: Texto corrigido (ex.: "War does not begin when bombs explode, but when dialogue ceases and the hope of understanding is lost in the silence of selfishness")
   - **language**: Nome do idioma detectado (ex.: "English (US)")
   - **languageCode**: C√≥digo do idioma (ex.: "en-US")
   - **confidence**: Confian√ßa da corre√ß√£o e detec√ß√£o (0.0 a 1.0)
   - **explanation**: Explica√ß√£o detalhada das corre√ß√µes e detec√ß√£o, adequada para exibir ao usu√°rio (ex.: "Corrigido 'Word Snow' para 'War does' e 'roupa' para 'hope' com base em fon√©tica e contexto po√©tico em ingl√™s. Idioma detectado: English (US).")
   - **suggestion**: Se confian√ßa < 0.7, sugira uma a√ß√£o ao usu√°rio (ex.: "Fale mais devagar ou verifique o microfone para melhorar a transcri√ß√£o.")

**Instru√ß√µes Adicionais**:
- Use conhecimento de fon√©tica para mapear erros comuns (ex.: "Souness" ‚Üí "selfishness" por similaridade sonora).
- Evite corre√ß√µes que alterem o sentido (ex.: n√£o transforme uma met√°fora como "silence of selfishness" em algo literal).
- Se detectar palavras em outro idioma (ex.: "roupa" em portugu√™s), considere-as como erros de reconhecimento e substitua por equivalentes fon√©ticos no idioma principal.
- Para textos confusos, compare com padr√µes de frases comuns em ingl√™s (ex.: estruturas como "does not begin when" indicam ingl√™s).
- Se o texto parecer inintelig√≠vel, retorne confian√ßa baixa (<0.5) e uma sugest√£o clara.

**Exemplo de Entrada e Sa√≠da**:
- Entrada: 
  - Texto: "Word Snow bones Explorer When Die and roupa understanding Lost the Silence of Souness"
  - currentLanguage: "en-US"
- Sa√≠da:
  {
    "correctedText": "War does not begin when bombs explode, but when dialogue ceases and the hope of understanding is lost in the silence of selfishness",
    "language": "English (US)",
    "languageCode": "en-US",
    "confidence": 0.92,
    "explanation": "Corrigido 'Word Snow' para 'War does', 'bones Explorer' para 'bombs explode', 'roupa' para 'hope', 'Souness' para 'selfishness' com base em similaridade fon√©tica e contexto po√©tico em ingl√™s.",
    "suggestion": null
  }

**Caso de Erro**:
- Se o texto for muito confuso (ex.: <5 palavras √∫teis ou confian√ßa <0.5), retorne:
  {
    "correctedText": null,
    "language": {currentLanguage},
    "languageCode": {currentLanguage},
    "confidence": 0.4,
    "explanation": "Texto muito confuso para corrigir com precis√£o.",
    "suggestion": "Tente falar mais devagar, mais alto ou em um ambiente com menos ru√≠do."
  }
Integra√ß√£o com o C√≥digo
Para usar este prompt no seu hook useSpeechRecognition, modifique as chamadas de API para incluir o prompt. Al√©m disso, integre o feedback (explanation e suggestion) no frontend (RecordingControls) para informar o usu√°rio sobre corre√ß√µes e sugerir a√ß√µes.
Modifica√ß√µes no `useSpeechRecognition`
	1	Atualizar detectLanguage e enhanceText: Inclua o prompt no payload da API e processe a sa√≠da para atualizar o transcript e exibir feedback.‚Ä®// Para detec√ß√£o de idioma
	2	const { mutate: detectLanguage } = useMutation({
	3	  mutationFn: async (text: string) => {
	4	    const response = await apiRequest('POST', '/api/ai/detect-language', {
	5	      text,
	6	      currentLanguage,
	7	      prompt: `Voc√™ √© um assistente de reconhecimento de fala avan√ßado... [insira o prompt acima com {text} = "${text}" e {currentLanguage} = "${currentLanguage}"]`
	8	    });
	9	    return response.json();
	10	  },
	11	  onSuccess: (data) => {
	12	    setDetectedLanguage(data.language);
	13	    setConfidence(data.confidence);
	14	    setCurrentLanguage(data.languageCode);
	15	    if (data.correctedText) {
	16	      setTranscript(data.correctedText); // Atualiza transcri√ß√£o com corre√ß√£o
	17	    }
	18	    toast({
	19	      title: `üåê Idioma: ${data.language}`,
	20	      description: data.explanation || "Idioma detectado com sucesso.",
	21	      variant: data.suggestion ? "destructive" : "default",
	22	      action: data.suggestion ? (
	23	        {data.suggestion}
	24	      ) : undefined,
	25	    });
	26	    if (!detectedLanguages.includes(data.languageCode)) {
	27	      setDetectedLanguages(prev => [...prev, data.languageCode]);
	28	      setLanguageCount(prev => prev + 1);
	29	    }
	30	  },
	31	  onError: (error, text) => {
	32	    console.log("‚ùå Falha na detec√ß√£o de IA, usando fallback");
	33	    detectLanguageFromTextFallback(text);
	34	  }
	35	});
	36	
	37	// Para aprimoramento/corre√ß√£o
	38	const { mutate: enhanceText } = useMutation({
	39	  mutationFn: async ({ text, targetLanguage }: { text: string; targetLanguage: string }) => {
	40	    const response = await apiRequest('POST', '/api/ai/enhance', {
	41	      text,
	42	      targetLanguage,
	43	      prompt: `Voc√™ √© um assistente de reconhecimento de fala avan√ßado... [insira o prompt acima com {text} = "${text}" e {currentLanguage} = "${targetLanguage}"]`
	44	    });
	45	    return response.json();
	46	  },
	47	  onSuccess: (data) => {
	48	    setConfidence(data.confidence);
	49	    if (enhancedMode && data.correctedText) {
	50	      setTranscript(data.correctedText); // Substitui com texto corrigido
	51	      toast({
	52	        title: "Transcri√ß√£o Corrigida",
	53	        description: data.explanation || "Texto aprimorado pela IA.",
	54	        variant: data.suggestion ? "destructive" : "default",
	55	        action: data.suggestion ? (
	56	          {data.suggestion}
	57	        ) : undefined,
	58	      });
	59	    }
	60	  }
	61	});
	62	
	63	Adicionar Timeout para N√£o Detec√ß√£o: No onresult do recognition, adicione um alerta se n√£o houver resultados √∫teis por 5 segundos:‚Ä®recognition.onresult = (event: any) => {
	64	  let finalTranscript = '';
	65	  let interimTranscript = '';
	66	  for (let i = event.resultIndex; i < event.results.length; i++) {
	67	    const transcriptPart = event.results[i][0].transcript;
	68	    if (event.results[i].isFinal) {
	69	      finalTranscript += transcriptPart;
	70	    } else {
	71	      interimTranscript += transcriptPart;
	72	    }
	73	  }
	74	  setTranscript(prev => {
	75	    const cleanPrevTranscript = prev.replace(/\[INTERIM\].*$/, '');
	76	    let newTranscript = cleanPrevTranscript;
	77	    if (finalTranscript.trim()) {
	78	      newTranscript += (newTranscript ? ' ' : '') + finalTranscript.trim();
	79	      const now = Date.now();
	80	      const textLength = finalTranscript.length;
	81	      const isDifferentText = finalTranscript !== lastProcessedTextRef.current;
	82	      if (textLength >= 15 && isDifferentText && (now - lastDetectionTimeRef.current) > 3000) {
	83	        detectLanguage(finalTranscript);
	84	        lastDetectionTimeRef.current = now;
	85	        lastProcessedTextRef.current = finalTranscript;
	86	      }
	87	      if (enhancedMode && textLength > 10) {
	88	        enhanceText({ text: finalTranscript, targetLanguage: currentLanguage });
	89	      }
	90	      if (autoTranslationEnabled && finalTranscript.trim().length > 3) {
	91	        translateText({ text: finalTranscript, targetLanguage: translationTargetLanguage || "en-US" });
	92	      }
	93	    }
	94	    if (interimTranscript.trim()) {
	95	      newTranscript += '[INTERIM]' + interimTranscript.trim();
	96	    }
	97	    updateWordCount(newTranscript.replace(/\[INTERIM\].*$/, ''));
	98	    return newTranscript;
	99	  });
	100	  // Adicionar verifica√ß√£o de sil√™ncio
	101	  if (!finalTranscript && !interimTranscript && recordingTime > 5) {
	102	    toast({
	103	      title: "Sem √Åudio Detectado",
	104	      description: "Fale mais alto ou verifique o microfone.",
	105	      variant: "destructive",
	106	    });
	107	  }
	108	};
	109	
Modifica√ß√µes no `RecordingControls`
Para melhorar a experi√™ncia do usu√°rio, adicione feedback visual sobre corre√ß√µes e sugest√µes da IA, usando os dados retornados pelo prompt (explanation e suggestion). Al√©m disso, facilite a sele√ß√£o manual de idioma quando a detec√ß√£o falha.
	1	Exibir Explica√ß√£o das Corre√ß√µes: Adicione uma se√ß√£o no RecordingControls para mostrar a explanation retornada pela IA, ajudando o usu√°rio a entender o que foi corrigido.
	2	  Detalhes da Corre√ß√£o
	3	  
	4	    {transcript && confidence < 0.9
	5	      ? "A IA corrigiu a transcri√ß√£o. Verifique o resultado ou fale mais claro."
	6	      : "Transcri√ß√£o precisa. Continue falando!"}
	7	  
	8	
	9	
	10	Bot√£o para For√ßar Re-detec√ß√£o: Adicione um bot√£o para o usu√°rio for√ßar uma nova detec√ß√£o de idioma ou corre√ß√£o, caso a IA erre (ex.: detectar portugu√™s em vez de ingl√™s).‚Ä® {
	11	    if (transcript) {
	12	      detectLanguage(transcript); // Reanalisa o idioma
	13	      enhanceText({ text: transcript, targetLanguage: currentLanguage }); // Reaplica corre√ß√£o
	14	    }
	15	  }}
	16	  variant="outline"
	17	  className="w-full bg-white/10 border-white/30 text-white hover:bg-white/20"
	18	  disabled={isRecording || !transcript}
	19	>
	20	  
	21	  Reanalisar Idioma e Corre√ß√£o
	22	
	23	
	24	Feedback Visual para Sugest√µes: No TranslationDialog (n√£o fornecido, mas assumo que gerencia tradu√ß√µes), adicione um campo para exibir suggestion da IA, como ‚ÄúFale mais devagar ou verifique o microfone.‚Äù Isso pode ser passado como prop para o componente.‚Ä®// No RecordingControls, passe a suggestion para o TranslationDialog
	25	 setIsTranslationDialogOpen(false)}
	26	  currentTranscript={transcript}
	27	  autoTranslationEnabled={autoTranslationEnabled}
	28	  translationTargetLanguage={translationTargetLanguage}
	29	  onToggleAutoTranslation={onToggleAutoTranslation}
	30	  onSetTranslationTarget={onSetTranslationTarget}
	31	  correctionSuggestion={/* passe data.suggestion do mutate */}
	32	/>
	33	
Sugest√µes Adicionais
	1	Teste com Cen√°rios Reais: Use o exemplo fornecido (‚ÄúWord Snow‚Ä¶‚Äù ‚Üí ‚ÄúWar does not‚Ä¶‚Äù) para testar o backend com o prompt. Verifique se a IA corrige as palavras corretamente e retorna confian√ßa alta.
	2	Suporte a Sotaque: No prompt, voc√™ pode adicionar um campo expl√≠cito para sotaque no payload da API, como { accent: "Brazilian speaking English" }, se o backend suportar.
	3	Melhorar √Åudio no Celular: Como o problema ocorre em celular, adicione verifica√ß√£o de permiss√µes de microfone no startRecording:‚Ä®const startRecording = useCallback(async () => {
	4	  try {
	5	    await navigator.mediaDevices.getUserMedia({ audio: true });
	6	    const recognition = initializeRecognition();
	7	    if (!recognition) return;
	8	    recognitionRef.current = recognition;
	9	    recognition.start();
	10	    setRecordingTime(0);
	11	    timeIntervalRef.current = setInterval(() => {
	12	      setRecordingTime(prev => prev + 1);
	13	    }, 1000);
	14	    audioLevelIntervalRef.current = setInterval(() => {
	15	      setAudioLevel(Math.random() * 100); // Substituir por n√≠vel real se poss√≠vel
	16	    }, 150);
	17	  } catch (error) {
	18	    console.error('Error starting recording:', error);
	19	    toast({
	20	      title: "Erro de Microfone",
	21	      description: "Verifique as permiss√µes do microfone no seu dispositivo.",
	22	      variant: "destructive",
	23	    });
	24	  }
	25	}, [initializeRecognition, toast]);
	26	
	27	Fallback para Outras APIs: Se a Web Speech API continuar falhando em celulares, considere integrar bibliotecas como Vosk.js ou usar a API da xAI (https://x.ai/api) para reconhecimento de fala mais robusto.
Exemplo de Sa√≠da Esperada
Para a entrada ‚ÄúWord Snow bones Explorer When Die and roupa understanding Lost the Silence of Souness‚Äù:
	‚Ä¢	Sa√≠da da IA:‚Ä®{
	‚Ä¢	  "correctedText": "War does not begin when bombs explode, but when dialogue ceases and the hope of understanding is lost in the silence of selfishness",
	‚Ä¢	  "language": "English (US)",
	‚Ä¢	  "languageCode": "en-US",
	‚Ä¢	  "confidence": 0.92,
	‚Ä¢	  "explanation": "Corrigido 'Word Snow' para 'War does', 'bones Explorer' para 'bombs explode', 'roupa' para 'hope', 'Souness' para 'selfishness' com base em similaridade fon√©tica e contexto po√©tico em ingl√™s.",
	‚Ä¢	  "suggestion": null
	‚Ä¢	}
	‚Ä¢	
	‚Ä¢	Feedback no Frontend (via toast):
	‚ó¶	T√≠tulo: ‚Äúüåê Idioma: English (US)‚Äù
	‚ó¶	Descri√ß√£o: ‚ÄúCorrigido ‚ÄòWord Snow‚Äô para ‚ÄòWar does‚Äô, ‚Äòbones Explorer‚Äô para ‚Äòbombs explode‚Äô, ‚Äòroupa‚Äô para ‚Äòhope‚Äô, ‚ÄòSouness‚Äô para ‚Äòselfishness‚Äô com base em fon√©tica e contexto.‚Äù
Se precisar de mais ajustes no prompt, ajuda com o TranslationDialog, ou testes adicionais com outros exemplos de erros, √© s√≥ avisar! üòä
